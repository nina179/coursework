      7
  4      8
             12

: \noindent First, we perform \texttt{insert(9)} to get the following BST:

        7
       4  8
            12
           9

: \vspace{2.5mm} \noindent We see that the subtree to the right of 7 has a height of 0 while the subtree to the left of 7 has a height of 2. Since the difference of the two heights is greater than 1, we need to perform an left rotation to balance the tree.
:
: \vspace{2.5mm} \noindent The binary search property dictates that $A < x < B < y < C$ where $x$ is the node we want to rotate around, $y$ is the node rotating around it. For this tree, $(A = 4) < (x = 7) < (y = 8) < (C = 12)$. So, when we call, \texttt{leftRotate(7)} we get the resulting tree:

        8
      7  12
    4   9
  
: \noindent Since the heights of root 8's children differ by at most one, we know that this is an AVL tree.